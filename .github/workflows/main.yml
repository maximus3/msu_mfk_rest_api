name: Main CI

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "*" ]

jobs:
  lint:

    runs-on: ubuntu-latest

    steps:
    #----------------------------------------------
    #       check-out repo and set-up python
    #----------------------------------------------
    - name: Check out repository
      uses: actions/checkout@v3
    - name: Set up python
      id: setup-python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    #----------------------------------------------
    #       load cached venv if cache exists
    #----------------------------------------------
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('poetry.lock') }}
    #----------------------------------------------
    #  -----  install & configure poetry  -----
    #----------------------------------------------
    - name: Install Poetry and dependencies
      run: |
        make venv
        make install

    - name: Run lint
      run: make lint

  test:

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14.5
        env:
          POSTGRES_DB: data
          POSTGRES_USER: pguser
          POSTGRES_PASSWORD: pgpswd
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          --name postgres
        ports:
          - 5432:5432

    steps:
    #----------------------------------------------
    #       check-out repo and set-up python
    #----------------------------------------------
    - name: Check out repository
      uses: actions/checkout@v3
    - name: Set up python
      id: setup-python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    #----------------------------------------------
    #       load cached venv if cache exists
    #----------------------------------------------
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('poetry.lock') }}
    #----------------------------------------------
    #  -----  install & configure poetry  -----
    #----------------------------------------------
    - name: Install Poetry and dependencies
      run: |
        make venv
        make install

    - name: Run tests
      run: |
        POSTGRES_HOST=localhost make test-mp

  deploy:

    runs-on: ubuntu-latest
    needs: [ lint, test ]
#    if: ${{ github.ref == 'refs/heads/main' }}
    env:
      SSH_PORT: ${{ secrets.SSH_PORT }}
      SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
      SSH_ADDRESS: ${{ secrets.SSH_HOST }}
      ENV: ${{ secrets.ENV }}
      GITHUB_REPO: ${{ github.repository }}
      CI_ENVIRONMENT_NAME: ${{ github.ref }}
      CODE_FOLDER: ${{ github.event.repository.name }}
      SSH_KEY: ${{ secrets.SSH_KEY }}
      CI_SERVER_HOST: ${{ github.server_url }}
    steps:
    - uses: actions/checkout@v3

#    - name: Notify start
#      run: sh ./ci/notify.sh "Starting deploy in PROD"

    - name: Deploy
      run: sh ./ci/deploy-github.sh

#    - name: Notify ok
#      run: sh ./ci/notify.sh "Deploy in PROD success âœ…"